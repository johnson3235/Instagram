@model Instagram.ViewModels.PostUser

@{
    ViewBag.Title = "UserPosts";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var count1 = 0;
    var count = 0;
    var info = 0;
    count1 = Model.friend1.Where(x => x.user_id == Model.user_page.id).Where(x=>x.status ==2).Count();
    count = count1;
int Main_id2 = Convert.ToInt32(Session["user_id"]);
}

<div class="container mt-5">
    <div id="content" class="content p-0">
        <div class="profile-header">
            <div class="profile-header-cover"></div>
            <div class="profile-header-content">
                <div class="profile-header-img mb-4">
                    <img src="~/images/@Html.DisplayFor(model => model.user_page.images)" class="mb-4" alt="" />
                </div>


                <div class="profile-header-info">
                    <h4 class="m-t-sm">@Html.DisplayFor(model => model.user_page.fname) @Html.DisplayFor(model => model.user_page.lname)</h4>

                    <p class="m-b-sm">UXUI + Frontend Developer</p>
                    @if (Model.user_page.id != Model.Mainuser.id)
                    {
                        if (Model.friend1.Where(x => x.request_id == Model.user_page.id).Where(x => x.user_id == Model.Mainuser.id).SingleOrDefault() != null)
                        {

                            var so = Model.friend1.Where(x => x.request_id == Model.user_page.id).Where(x => x.user_id == Model.Mainuser.id).SingleOrDefault();
                            if (so.status == 0)
                            {
                                <div class="col-10 offset-1">
                                    <div class="col-6">
                                        @using (Html.BeginForm("Accept", "Request", FormMethod.Post))
                                        {
                                            @Html.AntiForgeryToken()

                                            <input type="hidden" id="user_id" name="user_id" value="@Model.Mainuser.id" />
                                            <input type="hidden" id="request_id" name="request_id" value="@Model.user_page.id" />
                                            <div class="col-4 form-group">
                                                <div class="col-md-offset-2 col-md-10">
                                                    <input type="submit" value="Accept" class="btn btn-success" />
                                                </div>
                                            </div>
                                        }
                                    </div>
                                    <div class="col-6">
                                        @using (Html.BeginForm("Reject", "Request", FormMethod.Post))
                                        {
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" id="user_id" name="user_id" value="@Model.Mainuser.id" />
                                            <input type="hidden" id="request_id" name="request_id" value="@Model.user_page.id" />
                                            <div class="col-4 form-group">
                                                <div class="col-md-offset-2 col-md-10">
                                                    <input type="submit" value="Reject" class="btn btn-danger" />
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                            else if (so.status == 2)
                            {
                                <a href="#" class="btn btn-xs btn-success mb-2">Friends</a>
                                using (Html.BeginForm("Cancel", "Request", FormMethod.Post))
                                {
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" id="user_id" name="user_id" value="@Model.Mainuser.id" />
                                    <input type="hidden" id="request_id" name="request_id" value="@Model.user_page.id" />
                                    <div class="col-4 form-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value="Cancel Friend" class="btn btn-danger" />
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <a href="#" class="btn btn-xs btn-danger mb-2">Rejected</a>
                                using (Html.BeginForm("Cancel", "Request", FormMethod.Post))
                                {
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" id="user_id" name="user_id" value="@Model.Mainuser.id" />
                                    <input type="hidden" id="request_id" name="request_id" value="@Model.user_page.id" />
                                    <div class="col-4 form-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value="Cancel Rejected" class="btn btn-primary" />
                                        </div>
                                    </div>
                                }
                                info = 1;
                            }

                        }
                        else if (Model.friend1.Where(x => x.request_id == Model.Mainuser.id).Where(x => x.user_id == Model.user_page.id).SingleOrDefault() != null)
                        {
                            var so = Model.friend1.Where(x => x.request_id == Model.Mainuser.id).Where(x => x.user_id == Model.user_page.id).SingleOrDefault();
                            if (so.status == 0)
                            {
                                <a href="#" class="btn btn-xs btn-warning mb-2">Requesting</a>
                                info = 1;
                            }
                            else if (so.status == 2)
                            {
                                <a href="#" class="btn btn-xs btn-success mb-2">Friends</a>
                            }
                            else
                            {
                                <a href="#" class="btn btn-xs btn-danger mb-2">Rejected</a>
                                info = 1;
                            }
                        }

                        else
                        {

                            using (Html.BeginForm("SendRequest", "Request", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()

                                <input type="hidden" id="user_id" name="user_id" value="@Model.user_page.id" />
                                <input type="hidden" id="request_id" name="request_id" value="@Model.Mainuser.id" />
                                <div class="col-4 form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Request Friend" class="btn btn-success" />
                                    </div>
                                </div>
                            }
                        }

                    }
                    else
                    {

                        <a href='@Url.Action("UserEdit", new { controller = "User",id =Main_id2 })' class="btn btn-xs btn-primary mb-2">Edit Profile</a>
                    }
                </div>
            </div>

            <ul class="profile-header-tab nav nav-tabs">
                <li class="nav-item"><a  href='@Url.Action("UserPosts", new { controller = "User",user_id=Model.user_page.id})' class="nav-link active show" data-toggle="tab">POSTS</a></li>
                <li class="nav-item"><a href='@Url.Action("FriendList", new { controller = "User",user_id=Model.user_page.id })' class="nav-link " data-toggle="tab">FRIENDS</a></li>
            </ul>
        </div>

        <div class="profile-container">
            <div class="row row-space-20">
                <div class="col-md-8">
                    <div class="row  "> 
                        @if( info == 0)
                        {
                        foreach (var post in Model.post)
                        {
                            <div class="col-4 mb-3">
                                <a href='@Url.Action("Postdetails", new { controller = "Post", post_id=post.id , user_id = Model.Mainuser.id,user_page = Model.user_page.id })'>
                                    <img src="~/images/@Html.DisplayFor(modelItem => post.images)" class="img-fluid"  style="height:265px; width:100%;" />
                                </a>
                            </div>
                            }
                        }
                        else
                        {
                            <div class="col-12 text-center btn-danger">
                                <span > Sorry should be friend to see Posts</span>
                            </div>
                        }
                    </div>

                    </div>

                <div class="col-md-4 hidden-xs hidden-sm">
                    <ul class="profile-info-list">
                        <li class="title">PERSONAL INFORMATION</li>
                        <li>
                            <div class="field">Name:</div>
                            <div class="value">@Html.DisplayFor(model => Model.user_page.fname) @Html.DisplayFor(model => Model.user_page.lname)</div>
                        </li>
                        <li>
                            <div class="field">Email:</div>
                            <div class="value">@Html.DisplayFor(model => Model.user_page.email)</div>
                        </li>
                        <li>
                            <div class="field">Address:</div>
                            <div class="value">
                                <address class="m-b-0">
                                    Twitter, Inc.<br />
                                    1355 Market Street, Suite 900<br />
                                    San Francisco, CA 94103
                                </address>
                            </div>
                        </li>
                        <li>
                            <div class="field">Phone No.:</div>
                            <div class="value">
                                @Html.DisplayFor(model => Model.user_page.phone)
                            </div>
                        </li>
                   
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <style type="text/css">
        body {
            background: #eaeaea;
            margin-top: 20px;
        }

        .profile-info-list {
            padding: 0;
            margin: 0;
            list-style-type: none;
        }

        .friend-list,
        .img-grid-list {
            margin: -1px;
            list-style-type: none;
        }

        .profile-info-list > li.title {
            font-size: 0.625rem;
            font-weight: 700;
            color: #8a8a8f;
            padding: 0 0 0.3125rem;
        }

        .profile-info-list > li + li.title {
            padding-top: 1.5625rem;
        }

        .profile-info-list > li {
            padding: 0.625rem 0;
        }

            .profile-info-list > li .field {
                font-weight: 700;
            }

            .profile-info-list > li .value {
                color: #666;
            }

            .profile-info-list > li.img-list a {
                display: inline-block;
            }

                .profile-info-list > li.img-list a img {
                    max-width: 2.25rem;
                    -webkit-border-radius: 2.5rem;
                    -moz-border-radius: 2.5rem;
                    border-radius: 2.5rem;
                }

        .coming-soon-cover img,
        .email-detail-attachment .email-attachment .document-file img,
        .email-sender-img img,
        .friend-list .friend-img img,
        .profile-header-img img {
            max-width: 100%;
        }

        .table.table-profile th {
            border: none;
            color: #000;
            padding-bottom: 0.3125rem;
            padding-top: 0;
        }

        .table.table-profile td {
            border-color: #c8c7cc;
        }

        .table.table-profile tbody + thead > tr > th {
            padding-top: 1.5625rem;
        }

        .table.table-profile .field {
            color: #666;
            font-weight: 600;
            width: 25%;
            text-align: right;
        }

        .table.table-profile .value {
            font-weight: 500;
        }

        .profile-header {
            position: relative;
            overflow: hidden;
        }

            .profile-header .profile-header-cover {
                background: url(https://bootdey.com/img/Content/bg1.jpg) center no-repeat;
                background-size: 100% auto;
                position: absolute;
                left: 0;
                right: 0;
                top: 0;
                bottom: 0;
            }

                .profile-header .profile-header-cover:before {
                    content: "";
                    position: absolute;
                    top: 0;
                    left: 0;
                    right: 0;
                    bottom: 0;
                    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.25) 0, rgba(0, 0, 0, 0.85) 100%);
                }

            .profile-header .profile-header-content,
            .profile-header .profile-header-tab,
            .profile-header-img,
            body .fc-icon {
                position: relative;
            }

            .profile-header .profile-header-tab {
                background: #fff;
                list-style-type: none;
                margin: -1.25rem 0 0;
                padding: 0 0 0 8.75rem;
                border-bottom: 1px solid #c8c7cc;
                white-space: nowrap;
            }

                .profile-header .profile-header-tab > li {
                    display: inline-block;
                    margin: 0;
                }

                    .profile-header .profile-header-tab > li > a {
                        display: block;
                        color: #000;
                        line-height: 1.25rem;
                        padding: 0.625rem 1.25rem;
                        text-decoration: none;
                        font-weight: 700;
                        font-size: 0.75rem;
                        border: none;
                    }

                        .profile-header .profile-header-tab > li.active > a,
                        .profile-header .profile-header-tab > li > a.active {
                            color: #007aff;
                        }

            .profile-header .profile-header-content:after,
            .profile-header .profile-header-content:before {
                content: "";
                display: table;
                clear: both;
            }

            .profile-header .profile-header-content {
                color: #fff;
                padding: 1.25rem;
            }

        body .fc th a,
        body .fc-ltr .fc-basic-view .fc-day-top .fc-day-number,
        body .fc-widget-header a {
            color: #000;
        }

        .profile-header-img {
            float: left;
            width: 7.5rem;
            height: 7.5rem;
            overflow: hidden;
            z-index: 10;
            margin: 0 1.25rem -1.25rem 0;
            padding: 0.1875rem;
            -webkit-border-radius: 0.25rem;
            -moz-border-radius: 0.25rem;
            border-radius: 0.25rem;
            background: #fff;
        }

        .profile-header-info h4 {
            font-weight: 500;
            margin-bottom: 0.3125rem;
        }

        .profile-container {
            padding: 1.5625rem;
        }

        .profile-info-list {
            padding: 0;
            margin: 0;
            list-style-type: none;
        }

        .friend-list,
        .img-grid-list {
            margin: -1px;
            list-style-type: none;
        }

        .profile-info-list > li.title {
            font-size: 0.625rem;
            font-weight: 700;
            color: #8a8a8f;
            padding: 0 0 0.3125rem;
        }

        .profile-info-list > li + li.title {
            padding-top: 1.5625rem;
        }

        .profile-info-list > li {
            padding: 0.625rem 0;
        }

            .profile-info-list > li .field {
                font-weight: 700;
            }

            .profile-info-list > li .value {
                color: #666;
            }

            .profile-info-list > li.img-list a {
                display: inline-block;
            }

                .profile-info-list > li.img-list a img {
                    max-width: 2.25rem;
                    -webkit-border-radius: 2.5rem;
                    -moz-border-radius: 2.5rem;
                    border-radius: 2.5rem;
                }

        .coming-soon-cover img,
        .email-detail-attachment .email-attachment .document-file img,
        .email-sender-img img,
        .friend-list .friend-img img,
        .profile-header-img img {
            max-width: 100%;
        }

        .table.table-profile th {
            border: none;
            color: #000;
            padding-bottom: 0.3125rem;
            padding-top: 0;
        }

        .table.table-profile td {
            border-color: #c8c7cc;
        }

        .table.table-profile tbody + thead > tr > th {
            padding-top: 1.5625rem;
        }

        .table.table-profile .field {
            color: #666;
            font-weight: 600;
            width: 25%;
            text-align: right;
        }

        .table.table-profile .value {
            font-weight: 500;
        }

        .friend-list {
            padding: 0;
        }

            .friend-list > li {
                float: left;
                width: 50%;
            }

                .friend-list > li > a {
                    display: block;
                    text-decoration: none;
                    color: #000;
                    padding: 0.625rem;
                    margin: 1px;
                    background: #fff;
                }

                    .friend-list > li > a:after,
                    .friend-list > li > a:before {
                        content: "";
                        display: table;
                        clear: both;
                    }

            .friend-list .friend-img {
                float: left;
                width: 3rem;
                height: 3rem;
                overflow: hidden;
                background: #efeff4;
            }

            .friend-list .friend-info {
                margin-left: 3.625rem;
            }

                .friend-list .friend-info h4 {
                    margin: 0.3125rem 0;
                    font-size: 0.875rem;
                    font-weight: 600;
                }

                .friend-list .friend-info p {
                    color: #666;
                    margin: 0;
                }
    </style>